Reminder of stuff to add:


import logging
from pathlib import Path
import numpy as np
import click
from rich.logging import RichHandler

# Configure logging
logging.basicConfig(
    level="DEBUG",
    format="%(message)s",
    datefmt="[%X]",
    handlers=[RichHandler(rich_tracebacks=True)]
)

log = logging.getLogger(__name__)

@click.command()
@click.option("-d", "--data_dir", default="data", help="Where the data is.")
@click.option("-o", "--output_dir", default="outputs", help="Where the output is.")

def main(data_dir: str = "data", output_dir: str = "outputs") -> None:
    """
    Main function for setting up Frame examples and logging operations.
    
    Args:
    data_dir (str): Directory where the data is.
    output_dir (str): Directory where the output is.
    """
    data_dir = Path(data_dir).resolve()

    # Example rotation matrix and translation vectors
    rot = np.eye(3)
    trans = np.array([1.0, 0, 0])

    # Create Frame instances
    a = Frame(rot, trans)
    b = Frame(rot, np.array([0, 2, 0]))
    c = np.array([1.0, 0, 0])

    # Log the Frame objects and their operations
    log.debug(f"Example Frame A:\n{a}")
    log.debug(f"Example Frame B:\n{b}")
    
    # Perform multiplication between Frame A and B
    log.debug(f"Multiplication Example 1 (A @ B):\n{a @ b}")

    # Perform multiplication between Frame A and numpy array C
    log.debug(f"Multiplication Example 2 (A @ C):\n{a @ c}")

if __name__ == "__main__":
    main()


import setuptools

setuptools.setup(
    name="my_package",
    version="0.1",
    description="A sample Python package",
    author="John Doe",
    author_email="jdoe@example.com",
    packages=setuptools.find_packages(),
    install_requires=[
        'numpy',
        'scipy',
        'rich',
        'click',
    ],
)
